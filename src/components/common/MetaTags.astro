---
import { AstroSeo } from "@astrolib/seo";
import { getImage } from "@astrojs/image";
import { getRelativeUrlByFilePath } from "~/utils/directories";

import { SITE } from "~/config.mjs";
import defaultImageSrc from "~/assets/images/default.png";

import Fonts from "~/components/common/Fonts.astro";
import ExtraMetaTags from "~/components/common/ExtraMetaTags.astro";

import type { MetaSEO } from "~/types";

const { src: defaultImage } = await getImage({
  src: defaultImageSrc,
  width: 768,
  aspectRatio: "16:9",
  alt: "tnyn.cafe",
});

export interface Props extends MetaSEO {}

const {
  title = SITE.name,
  description = "",
  image: _image = defaultImage,
  canonical,
  noindex = false,
  nofollow = false,

  ogTitle = title,
  ogType = "website",
} = Astro.props;

const image =
  typeof _image === "string"
    ? new URL(_image, Astro.site)
    : _image && typeof _image["src"] !== "undefined"
    ? // @ts-ignore
      new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
    : null;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<AstroSeo
  title={title}
  description={description}
  canonical={String(canonical)}
  noindex={noindex}
  nofollow={nofollow}
  openGraph={{
    url: String(canonical),
    title: ogTitle,
    description: description,
    type: ogType,
    images: image
      ? [
          {
            url: image.toString(),
            alt: ogTitle,
          },
        ]
      : undefined,
    // site_name: 'SiteName',
  }}
  twitter={{
    // handle: '@handle',
    // site: '@site',
    cardType: image ? "summary_large_image" : undefined,
  }}
/>

<Fonts />

<ExtraMetaTags />
