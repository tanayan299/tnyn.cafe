---
import { WORKSITE, WORKS } from "~/config.mjs";

import Layout from "~/layouts/PageLayout.astro";
import GridList from "~/components/works/Grid.astro";
import Headline from "~/components/works/Headline.astro";
import Pagination from "~/components/works/Pagination.astro";

import { fetchPosts } from "~/utils/works";
import { CATEGORY_BASE } from "~/utils/workspermalinks";

export async function getStaticPaths({ paginate }) {
  if (WORKS?.disabled || WORKS?.category?.disabled) return [];

  const workes = await fetchPosts();
  const categories = new Set();
  workes.map((works) => {
    typeof works.category === "string" &&
      categories.add(works.category.toLowerCase());
  });

  return Array.from(categories).map((category: string) =>
    paginate(
      workes.filter(
        (works) =>
          typeof works.category === "string" &&
          category === works.category.toLowerCase()
      ),
      {
        params: { category: category, works: CATEGORY_BASE || undefined },
        pageSize: WORKS.workesPerPage,
        props: { category },
      }
    )
  );
}

const { page, category } = Astro.props;

const currentPage = page.currentPage ?? 1;
const meta = {
  title: `Category'${category}' ${
    currentPage > 1 ? ` â€” Page ${currentPage}` : ""
  }`,
  description: WORKSITE.description,
  noindex: WORKS?.category?.noindex,
};
---

<Layout meta={meta}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    {/*
    <dev
      style="text-shadow: 0 0 10px rgba(0, 255, 255, 0.5), 0 0 10px rgba(0, 255, 255, 0.2);"
    >
    */}
      <Headline>
        Category: <span class="capitalize">{category.replaceAll("-", " ")}</span
        >
      </Headline>
    {/*
    </dev>
    */}
    <GridList works={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
