---
import { SITE, BLOG } from "~/config.mjs";

import Layout from "~/layouts/PageLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Pagination from "~/components/common/Pagination.astro";

import { fetchPosts } from "~/utils/posts";
import {
  getCanonical,
  getPermalink,
  cleanSlug,
  TAG_BASE,
} from "~/utils/permalinks";
import Title from "~/components/blog/Title.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  if (BLOG?.disabled || BLOG?.tag?.disabled) return [];
  const posts = await fetchPosts();
  const tags = new Set();
  posts.map((post) => {
    Array.isArray(post.tags) &&
      post.tags.map((tag) => tags.add(tag.toLowerCase()));
    return Array.from(tags).map((tag) =>
      paginate(
        posts.filter(
          (post: any) =>
            Array.isArray(post.tags) &&
            post.tags.find((elem: any) => elem.toLowerCase() === tag)
        ),
        {
          params: { tag: cleanSlug(String(tag)), tags: TAG_BASE || undefined },
          pageSize: BLOG.postsPerPage,
          props: { tag },
        }
      )
    );
  });
}

const { page, tag } = Astro.props;
const currentPage = page.currentPage ?? 1;
const meta = {
  title: `Posts by tag '${tag}' ${
    currentPage > 1 ? `— Page ${currentPage} ` : ""
  }— ${SITE.name}`,
  description: SITE.description,
  canonical: getCanonical(getPermalink(tag, "tag")),
  noindex: true,
};
---

<Layout meta={meta}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-3xl">
    <Title>Tag: {tag}</Title>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
